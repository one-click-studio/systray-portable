name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_linux:
    name: Build Linux Binaries
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04

    steps:
      - uses: actions/checkout@master
      - name: Install dependencies
        run: |
          cat << EOF > /etc/apt/sources.list
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic main universe
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic main universe
          deb [arch=amd64] http://archive.ubuntu.com/ubuntu/ bionic-updates main universe
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic-updates main universe
          deb [arch=amd64] http://security.ubuntu.com/ubuntu/ bionic-security main universe
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ bionic-security main universe
          EOF
          dpkg --add-architecture arm64
          apt update
          apt install --no-install-recommends -y ca-certificates zip build-essential gcc-7-multilib gcc-aarch64-linux-gnu
      - name: Create dist dir
        run: mkdir dist
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.15
      - name: Build linux x64
        env:
          GOOS: linux
          GOARCH: amd64
        run: |
          apt install --no-install-recommends -y libgtk-3-dev libappindicator3-dev
          go build -o ./dist/tray-linux-amd64 -ldflags "-s -w" tray.go
          apt purge -y libgtk-3-dev libappindicator3-dev
          apt autoremove
          apt update
          apt check
          apt -f install
          apt autoclean

      - name: Build linux arm64
        env:
          PKG_CONFIG_PATH: /usr/lib/aarch64-linux-gnu/pkgconfig
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: arm64
          GOHOSTARCH: amd64
          CC: aarch64-linux-gnu-gcc
          CC_FOR_TARGET: gcc-aarch64-linux-gnu
        run: |
          apt install --no-install-recommends -y libgtk-3-dev:arm64 libappindicator3-dev:arm64
          go build -o ./dist/tray-linux-arm64 -ldflags "-s -w" tray.go
          apt remove -y libgtk-3-dev:arm64 libappindicator3-dev:arm64
      - name: Upload linux artifact
        uses: actions/upload-artifact@v3
        with:
          name: tray_linux
          path: ./dist/*

  # build_macos:
  #   name: Build MacOS Binaries
  #   runs-on: macos-latest

  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Create dist dir
  #       run: mkdir dist
  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.x
  #     - name: Build x64
  #       env:
  #         GOOS: darwin
  #         GOARCH: amd64
  #       run: go build -o ./dist/tray-darwin-amd64 -ldflags "-s -w" tray.go
  #     - name: Build arm64
  #       env:
  #         CGO_ENABLED: 1
  #         GOOS: darwin
  #         GOARCH: arm64
  #       run: SDKROOT=$(xcrun --sdk macosx --show-sdk-path) go build -o ./dist/tray-darwin-arm64 -ldflags "-s -w" tray.go
  #     - name: Upload macos artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: tray_macos
  #         path: ./dist/*

  # build_windows:
  #   name: Build Windows Binaries
  #   runs-on: windows-latest

  #   steps:
  #     - uses: actions/checkout@master
  #     - name: Create dist dir
  #       run: mkdir dist
  #     - name: Set up Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.15
  #     - name: Build x64
  #       env:
  #         GOOS: windows
  #         GOARCH: amd64
  #       run: go build -o ./dist/tray-windows-amd64.exe -ldflags "-s -w" tray.go
  #     - name: Upload windows artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: tray_windows
  #         path: ./dist/*

  # release:
  #   name: Create Release
  #   needs: [build_linux, build_macos, build_windows]
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Download artifacts
  #       uses: actions/download-artifact@v3
  #       with:
  #         path: ./artifacts

  #     - name: Upload executables to asset
  #       id: upload-release-asset
  #       uses: softprops/action-gh-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
  #       with:
  #         draft: true
  #         tag_name: latest
  #         files: ./artifacts/tray_linux/*, ./artifacts/tray_macos/*, ./artifacts/tray_windows/*

  #     - name: Repository Dispatch
  #       uses: peter-evans/repository-dispatch@v2
  #       with:
  #         token: ${{ secrets.GH_TOKEN }}
  #         repository: one-click-studio/node-systray
  #         event-type: systray-portable-release
