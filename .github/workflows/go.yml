name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            target-os: linux
          # - os: windows-latest
          #   target-os: windows
          #   ext: .exe
          # - os: macos-latest
          #   target-os: darwin
    steps:
    - uses: actions/checkout@master

    - name: Install gtk3
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: sudo apt-get install libgtk-3-dev libappindicator3-dev gcc-aarch64-linux-gnu

    - name: Setup Go environment
      uses: actions/setup-go@v3

    - name: Build x64
      run: env GOOS=${{ matrix.target-os }} GOARCH=amd64 go build -o ./tray-${{ matrix.target-os }}-adm64${{ matrix.ext }} -ldflags "-s -w" tray.go
    - name: Build arm64
      if: ${{ matrix.os == 'macos-latest' }}
      run: env CGO_ENABLED=1 GOOS=${{ matrix.target-os }} GOARCH=arm64 go build -o ./tray-${{ matrix.target-os }}-arm64${{ matrix.ext }} -ldflags "-s -w" tray.go
    - name: Build arm64
      if: ${{ matrix.os == 'ubuntu-20.04' }}
      run: env CGO_ENABLED=1 GOOS=${{ matrix.target-os }} GOARCH=arm64 CC=aarch64-linux-gnu-gcc CC_FOR_TARGET=gcc-aarch64-linux-gnu go build -o ./tray-${{ matrix.target-os }}-arm64${{ matrix.ext }} -ldflags "-s -w" tray.go

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: tray-${{ matrix.target-os }}-adm64${{ matrix.ext }}
        path: ./tray-${{ matrix.target-os }}-adm64${{ matrix.ext }}
    - name: Upload artifact
      if: ${{ matrix.os != 'windows-latest' }}
      uses: actions/upload-artifact@v3
      with:
        name: tray-${{ matrix.target-os }}-arm64${{ matrix.ext }}
        path: ./tray-${{ matrix.target-os }}-arm64${{ matrix.ext }}
